{"version":3,"sources":["MyStyles.module.css","components/NavbarComponent.js","components/Form.js","components/CurrentWeather.js","components/MainComponent.js","App.js","index.js"],"names":["module","exports","NavComponent","className","Navbar","expand","sticky","Brand","style","color","href","Toggle","aria-controls","Collapse","id","Nav","Button","backgroundColor","Form","props","onSubmit","loadWeather","type","name","placeholder","Current","getWeather","e","a","preventDefault","country","target","elements","value","city","fetch","api_call","json","response","setState","sys","main","weather","temp","calFar","humidity","preassure","temp_max","temp_min","description","error","get_WeatherIcon","weatherIcon","console","log","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","this","Math","floor","Card","Body","Title","Subtitle","Text","React","Component","Main","App","styles","backcolor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ca2eda1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backcolor\":\"MyStyles_backcolor__md8z_\"};","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Navbar, Nav, Form, FormControl } from \"react-bootstrap\";\nimport { Button } from \"reactstrap\";\nimport \"../MyStyles.module.css\";\n\nconst NavComponent = () => {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <Router>\n            <Navbar expand=\"lg\" sticky=\"top\">\n              <Navbar.Brand style={{ color: \"white\" }} href=\"#\">\n                Forcast\n              </Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                  <div>\n                    <Button\n                      style={{ backgroundColor: \"transparent\", color: \"white\" }}\n                      href=\"#\">\n                      Home\n                    </Button>\n                  </div>\n                </Nav>\n              </Navbar.Collapse>\n            </Navbar>\n            <div className=\"jumbtron text-center\" style={{ color: \"white\" }}>\n              <h1>Accurate-Weather</h1>\n            </div>\n          </Router>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NavComponent;\n","import React from \"react\";\nimport {Button} from 'reactstrap'\n\nconst Form = props => {\n  return (\n        <div className=\"containter\">\n          <form onSubmit={props.loadWeather}>\n            <div className=\"row justify-content-center\">\n              <input\n                type=\"text\"\n                className=\"form-control col-2\"\n                name=\"city\"\n                placeholder=\"City...\"\n                style={{\n                  backgroundColor: \"transparent\",\n                  color: \"white\",\n                }}\n              />\n\n              <input\n                type=\"text\"\n                className=\"form-control col-2\"\n                name=\"country\"\n                placeholder=\"Country(US)...\"\n                style={{\n                  backgroundColor: \"transparent\",\n                  color: \"white\",\n                }}\n              />\n              <Button color=\"outline-light\">Search Location</Button>\n            </div>\n          </form>\n          </div>\n  )};\nconst error = props => {\n  return (\n    <div className=\"alert alert-danger mx-5\" role=\"alert\">\n      Please Enter City and Country...!\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"./Form\";\nimport \"weather-icons/css/weather-icons.css\";\n\nconst API_key = \"9f4774fcfe621d4f45c7528f63ebcf9d\";\n\nclass Current extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      temp: undefined,\n      main: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: undefined,\n      humidity: undefined,\n      preassure: undefined,\n      error: false,\n    };\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\",\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icon: icons.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: icons.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icon: icons.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: icons.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: icons.Atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: icons.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: icons.Clouds });\n        break;\n      default:\n        this.setState({ icon: icons.Clouds });\n    }\n  }\n\n  calFar(temp) {\n    let f = Math.floor(((temp - 271.15) * 9) / 5 + 26);\n    return f;\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    const city = e.target.elements.city.value;\n\n    if (country && city) {\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`\n      );\n\n      const response = await api_call.json();\n\n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        country: response.sys.country,\n        main: response.weather[0].main,\n        temp: this.calFar(response.main.temp),\n        humidity: response.main.humidity,\n        preassure: response.main.preassure,\n        temp_max: this.calFar(response.main.temp_max),\n        temp_min: this.calFar(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false,\n      });\n\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n\n      console.log(response);\n    } else {\n      this.setState({\n        error: true,\n      });\n    }\n  };\n  // Search Form\n  render() {\n    return (\n      <div>\n        <Form loadWeather={this.getWeather} />\n        <Card style={{ backgroundColor: \"transparent\" }}>\n          <Card.Body>\n            <Card.Title className=\"text-center\" style={{ color: \"white\" }}>\n              <h4>{this.state.city}</h4>\n            </Card.Title>\n            <Card.Subtitle className=\"text-center\" style={{ color: \"white\" }}>\n              <h1>\n                {this.state.temp}\n                <h1 className={\" wi wi-fahrenheit\"}></h1>\n              </h1>\n              <p>\n                {\" \"}\n                {this.state.temp_min}&deg;- {this.state.temp_max}&deg;{\" \"}\n              </p>\n              <p>{this.state.humidity}%</p>\n              <p>{this.state.preassure}</p>\n            </Card.Subtitle>\n            <Card.Text className=\"text-center\" style={{ color: \"white\" }}>\n              {this.state.description}\n            </Card.Text>\n            <Card.Text className=\"text-center\" style={{ color: \"white\" }}>\n              <i className={`wi ${this.state.icon} display-4`} />\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Current;\n","import React from \"react\";\nimport NavComponent from \"./NavbarComponent\";\nimport Current from \"./CurrentWeather\";\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <div>\n        <NavComponent />\n        <Current />\n      </div>\n    );\n  }\n}\nexport default Main;\n","import React from \"react\";\nimport  Main  from \"./components/MainComponent\";\nimport styles from './MyStyles.module.css'\nimport 'weather-icons/css/weather-icons.css'\n\n\nfunction App() {\n  return (\n    <div className={styles.backcolor}>\n      <Main />\n    </div>\n  );\n}\n\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n \n  document.getElementById(\"root\")\n);\n\n\n\n"],"sourceRoot":""}